from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from ..keyboards.inline import confirm_text

router = Router()

class AddStates(StatesGroup):
    awaiting_content = State()
    awaiting_text_confirm = State()
    awaiting_photo_caption = State()

@router.message(F.text == "üìù –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
@router.message(Command("add"))
async def cmd_add(message: Message, state: FSMContext):
    await state.set_state(AddStates.awaiting_content)
    await message.answer("–û–∫–µ–π! –û—Ç–ø—Ä–∞–≤—å <b>—Ç–µ–∫—Å—Ç</b>, <b>—Ñ–æ—Ç–æ</b> –∏–ª–∏ <b>–∞—É–¥–∏–æ/–≥–æ–ª–æ—Å</b> –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è.")

@router.message(F.text == "üìã –°–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
async def menu_list(message: Message):
    from .commands import list_cmd
    await list_cmd(message)

# generic text
@router.message(F.text & ~F.text.startswith("/"))
async def on_text(message: Message, state: FSMContext):
    cur = await state.get_state()
    if cur == AddStates.awaiting_photo_caption.state:
        return
    await state.update_data(draft_text=message.text)
    await state.set_state(AddStates.awaiting_text_confirm)
    await message.answer(
        f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª:\n\n<blockquote>{message.text}</blockquote>\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?",
        reply_markup=confirm_text()
    )